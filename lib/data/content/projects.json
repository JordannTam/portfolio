[
  {
    "title": "Portfolio",
    "period": "Jan 2025 - Feb 2025",
    "description": "A personal portfolio website showcasing my projects, experience, and skills. The site is built with Next.js, Tailwind CSS, and TypeScript, featuring a responsive design and smooth animations. The project includes a custom CMS for easy content management, and is deployed on  for AWS Amplify for fast loading times and register domain from Route 53. The website is designed to be SEO-friendly and accessible, with a focus on user experience and performance.",
    "technologies": ["Next.js", "Tailwind CSS", "TypeScript", "Frame Motion", "AWS Amplify", "Route 53"],
    "highlights": [
      "Designed and developed a responsive website with a focus on user experience and performance",
      "Implemented custom CMS for easy content management",
      "Deployed website on Vercel with AWS Amplify for continuous deployment and Route 53 for domain management"
    ],
    "url": "https://github.com/JordannTam/portfolio",
    "picture": "portfolio.png"
  },
  {
    "title": "SyncFlow",
    "period": "Jun 2023 - Aug 2023",
    "description": "SyncFlow is an innovative task management system that combines real-time collaboration with intelligent workload optimization. The platform features a sophisticated task scheduling algorithm that uses Monte Carlo simulation and binary search to optimize work hours while ensuring deadline compliance. .The system includes real-time chat functionality using WebSocket, workload estimation based on Amdahl's law, and a multi-criteria search system. Built with React, FastAPI, and PostgreSQL. As Frontend Leader, I architected the UI with emphasis on user experience and real-time updates",
    "technologies": ["React", "Tailwind", "Redux.js", "FastAPI", "PostgreSQL", "WebSockets"],
    "highlights": [
      "Led frontend team using Jira for task management",
      "Implemented JWT authentication and WebSocket communication",
      "Conducted project using Agile methodologies"
    ],
    "url": "https://github.com/JordannTam/syncFlow",
    "picture": "syncflow.png"
  },
  {
    "title": "P2PConnect",
    "period": "Oct 2022 - Nov 2022",
    "description": "A secure client-server network application built in Python that manages communication and file sharing between edge devices. The system implements both TCP and UDP protocols, featuring robust authentication with account lockout protection, multi-threading for concurrent connections, and comprehensive device monitoring. It includes functionality for peer-to-peer file transfers, data generation, and computation services, demonstrating practical implementation of network programming principles and security measures in a distributed system.",
    "technologies": ["Python", "Sockets", "Threading"],
    "highlights": [
      "Architected a multi-threaded network application using Python sockets, implementing a secure client-server architecture with advanced P2P file transfer capabilities",
      "Developed a robust authentication system with account lockout mechanisms using thread-safe synchronization",
      "Designed a flexible command interface supporting multiple network operations (file generation, transfer, computation) with real-time communication between edge devices",
      "Implemented complex networking protocols enabling seamless file sharing and device communication"
    ],
    "url": "https://github.com/JordannTam/P2P-Connect"
  },
  {
    "title": "Dungeon Mania",
    "period": "Jun 2022 - Aug 2022",
    "description": "A 20x20 block dungeon game with customizable maps",
    "technologies": ["Java", "Git"],
    "highlights": [
      "Developed using object-oriented design principles",
      "Implemented various design patterns for gameplay mechanics",
      "Used Scrum methodology for project management"
    ]
  },
  {
    "title": "Operating System",
    "period": "Jan 2022 - Apr 2022",
    "description": "The OS/161 project is an educational operating system designed to teach fundamental concepts of operating systems through hands-on assignments. The project covers six key areas: synchronization, basic system calls, virtual memory, basic file system functionality, file system recovery via journaling, and additional OS functionality. In this project, I implemented synchronization primitives, essential system calls for file operations and process management, and enhanced file system functionality with additional system calls and a buffer cache. The project provided a comprehensive learning experience in operating system development.",
    "technologies": ["C"],
    "highlights": [
      "Implemented synchronization primitives (locks, condition variables) for thread management",
      "Developed system calls for file operations and process management",
      "Enhanced file system functionality with additional system calls and buffer cache",
      "Implemented journaling for file system recovery and additional OS functionality"
    ]
  }
]